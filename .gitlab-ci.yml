stages:
  - setup
  - compile
  - preprocess
  - jetCamera

# Global Variables
variables: 
  CMS_PATH: /cvmfs/cms.cern.ch # This is also set on LXPLUS
  CMSSW_RELEASE: CMSSW_10_2_18
#  CMSSW_FOR_CAMERA: CMSSW_10_2_18
  
# If this stage is passed, then cmssw sets up correctly
cmssw_setup:
  stage: setup
  tags:
    - cvmfs
  script:
    # aliases must be expanded in noninteractive bash mode
    - shopt -s expand_aliases
    # access cvmfs
    - set +u && source ${CMS_PATH}/cmsset_default.sh; set -u
    - cmsrel ${CMSSW_RELEASE}
    - cd ${CMSSW_RELEASE}/src
    - cmsenv
    - cmsRun --help
  artifacts:
    paths: 
      - ${CMSSW_RELEASE}/

# If this stage is passed, then the jettoolbox and BEST are getting added and compiled properly    
BEST_compile:
  stage: compile
  tags:
    - cvmfs
  script:
    - cd ${CMSSW_RELEASE}/src
    # aliases must be expanded in noninteractive bash mode
    - shopt -s expand_aliases
    - set +u && source ${CMS_PATH}/cmsset_default.sh; set -u
    - cmsenv
    # copy files for BEST
    - mkdir -p BEST
    - cp -r "${CI_PROJECT_DIR}/jetCamera" "${CMSSW_BASE}/src/BEST"
    - cp -r "${CI_PROJECT_DIR}/preprocess" "${CMSSW_BASE}/src/BEST"
    - cp -r "${CI_PROJECT_DIR}/training" "${CMSSW_BASE}/src/BEST"
    # compile
    - scram b
  artifacts:
    paths: 
      - ${CMSSW_RELEASE}/

# If this stage is passed, the root files are getting preprocessed correctly
BEST_preprocess:
  stage: preprocess
  image:
    name: gitlab-registry.cern.ch/clange/cmssw-docker/cc7-cms:latest
    entrypoint: [""]
  tags:
    - cvmfs
  script:
    # aliases must be expanded in noninteractive bash mode
    - shopt -s expand_aliases
    - set +u && source ${CMS_PATH}/cmsset_default.sh; set -u
    - mkdir run
    - cp -r ${CMSSW_RELEASE} run/
    - chmod -R +w run/${CMSSW_RELEASE}/
    - cd run/${CMSSW_RELEASE}/src/BEST
    - cmsenv
    # set up env to access grid
    - mkdir -p ${HOME}/.globus
    - printf $GRID_USERCERT | base64 -d > ${HOME}/.globus/usercert.pem
    - printf $GRID_USERKEY | base64 -d > ${HOME}/.globus/userkey.pem
    - chmod 400 ${HOME}/.globus/userkey.pem
    - echo ${GRID_PASSWORD} | base64 -d | voms-proxy-init --voms cms --pwstdin
    # test the preprocess
    - cd preprocess
    - cmsRun test/run_ZZ_test.py
    - python BES_variable_testingSuite.py
    - ls
    - pwd
  artifacts:
    paths:
      - run/${CMSSW_RELEASE}
      - ${HOME}/.globus

# Test the Jet Camera
BEST_jetCamera:
  stage: jetCamera
  image:
    name: gitlab-registry.cern.ch/clange/cmssw-docker/cc7-cms:latest
    entrypoint: [""]
  tags:
    - cvmfs
  script:
    # aliases must be expanded in noninteractive bash mode
    - shopt -s expand_aliases
    # access cvmfs
    - set +u && source ${CMS_PATH}/cmsset_default.sh; set -u
    - mkdir camera
    - cp -r run/${CMSSW_RELEASE} camera/
    - chmod -R +w camera/${CMSSW_RELEASE}/
    - cd camera/${CMSSW_RELEASE}/src/BEST
    - cmsenv
    # copy files for BEST
    - cd formatConverter
    - mkdir h5samples
    - mkdir plots
    - python test_boost_jetImageCreator.py
    
